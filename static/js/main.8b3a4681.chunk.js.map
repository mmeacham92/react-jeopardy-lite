{"version":3,"sources":["components/welcome/Welcome.js","components/clock/Clock.js","components/contact/Contact.js","components/navigation/Navigation.js","components/jeopardy/UserScore.js","components/jeopardy/CategoryButton.js","components/jeopardy/Categories.js","components/jeopardy/Question.js","components/jeopardy/GameStart.js","components/jeopardy/Display.js","services/jeopardyServices.js","components/jeopardy/Jeopardy.js","NoMatch.js","App.js","index.js"],"names":["Welcome","props","name","match","params","className","Clock","state","date","Date","this","timerID","setInterval","tick","clearInterval","setState","toLocaleTimeString","Component","Contact","handleChange","event","formData","target","value","handleSubmit","preventDefault","submitted","resetForm","firstName","lastName","email","onClick","onSubmit","onChange","type","Navigation","to","UserScore","style","scoreStyle","score","resetUserScore","currentQuestionIndex","React","CategoryButton","updateQuestionIndex","index","capitalizeEachWord","Categories","buttons","data","map","item","category","title","id","marginBottom","fontSize","Question","question","find","i","console","log","answerText","answer","GameStart","updateIsPlaying","Display","isPlaying","changeScoreColor","JeopardyService","url","client","axios","create","get","Jeopardy","bind","e","animation","animationDuration","getQuestions","then","result","clues","slice","getNewQuestions","string","toLowerCase","trim","newScore","checkAnswer","setTimeout","str","split","word","charAt","toUpperCase","join","NoMatch","App","exact","path","render","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8b3a4681.chunk.js","sourcesContent":["const Welcome = (props) => {\r\n  let name = props.match?.params.name || props.name;\r\n  return (\r\n    <div className=\"Welcome\">\r\n      <h1>Hello, {name || props.name}!</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Welcome;\r\n","import React, { Component } from \"react\";\r\nclass Clock extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { date: new Date() };\r\n  }\r\n  componentDidMount() {\r\n    this.timerID = setInterval(() => this.tick(), 1000);\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n  tick() {\r\n    this.setState({\r\n      date: new Date(),\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Clock\">\r\n        <h2>It is {this.state.date.toLocaleTimeString()}.</h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Clock;\r\n","import React, { Component } from \"react\";\r\nclass Contact extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      submitted: false,\r\n      formData: {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n      },\r\n    };\r\n  }\r\n  handleChange = (event) => {\r\n    let formData = this.state.formData;\r\n    formData[event.target.name] = event.target.value;\r\n    this.setState({ formData });\r\n  };\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      submitted: true,\r\n    });\r\n  };\r\n  resetForm = (event) => {\r\n    this.setState({\r\n      submitted: false,\r\n      formData: {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n      },\r\n    });\r\n  };\r\n  render() {\r\n    //show the thank you message if the form has been submitted\r\n    if (this.state.submitted) {\r\n      return (\r\n        <div>\r\n          Thank you, {this.state.formData.firstName}, for submitting the form{\" \"}\r\n          <br />\r\n          <button onClick={this.resetForm}>Reset Form</button>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"Contact\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div>\r\n            <label>First Name:</label>\r\n            <input\r\n              onChange={this.handleChange}\r\n              type=\"text\"\r\n              name=\"firstName\"\r\n              value={this.state.formData.firstName}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label>Last Name:</label>\r\n            <input\r\n              onChange={this.handleChange}\r\n              type=\"text\"\r\n              name=\"lastName\"\r\n              value={this.state.formData.lastName}\r\n            />\r\n          </div>\r\n          <button>Submit Form</button> <br />\r\n          {this.state.formData.firstName}\r\n          <br />\r\n          {this.state.formData.lastName}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <div className=\"Navigation\">\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/\">Home</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/clock\">Clock</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/contact\">Contact</Link>\r\n        </li>\r\n        <li>\r\n            <Link to='/jeopardy'>Jeopardy!</Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\n\r\nclass UserScore extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"score__div\">\r\n        <div className=\"score\">\r\n          <h3>\r\n            <span className=\"current__score\">\r\n              Your Score:{\" \"}\r\n              <span\r\n                style={this.props.scoreStyle}\r\n                className=\"user__score\"\r\n              >\r\n                {this.props.score}\r\n              </span>\r\n            </span>\r\n          </h3>\r\n        </div>\r\n\r\n        <button\r\n          onClick={this.props.resetUserScore}\r\n          className={`reset__button ${\r\n            this.props.currentQuestionIndex === null ? \"\" : \"hide\"\r\n          }`}\r\n        >\r\n          Reset Score\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserScore;\r\n","import React from \"react\";\r\n\r\nclass CategoryButton extends React.Component {\r\n  render() {\r\n    const updateQuestion = () => {\r\n      this.props.updateQuestionIndex(this.props.index);\r\n    };\r\n\r\n    return (\r\n      <button\r\n        className=\"category__button\"\r\n        onClick={updateQuestion}\r\n        name={this.props.name}\r\n      >\r\n        {this.props.capitalizeEachWord(this.props.name)}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CategoryButton;\r\n","import React from \"react\";\r\n\r\nimport CategoryButton from \"./CategoryButton\";\r\n\r\nclass Categories extends React.Component {\r\n  render() {\r\n    // renders an empty div if a category has been selected\r\n    if (this.props.currentQuestionIndex !== null) return <div></div>;\r\n    // returns a button with the name and text field === category.title for each of our objects in our state.data array\r\n    const buttons = this.props.data.map((item, index) => {\r\n      return (\r\n        <CategoryButton\r\n          name={item?.category?.title}\r\n          key={item.id}\r\n          updateQuestionIndex={this.props.updateQuestionIndex}\r\n          capitalizeEachWord={this.props.capitalizeEachWord}\r\n          index={index}\r\n        />\r\n      );\r\n    });\r\n\r\n    const margin = { marginBottom: \"3rem\", fontSize: '2.5rem' };\r\n    return (\r\n      <div className=\"categories__div\">\r\n        <h2 style={margin}>Select a Category</h2>\r\n        <div className=\"categories__buttons\">{buttons}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Categories;\r\n","import React from \"react\";\r\n\r\nclass Question extends React.Component {\r\n  render() {\r\n    // find the object in our state.data array that matches the currentQuestionIndex state property that is set by the user clicking a category button\r\n    const question = this.props.data.find(\r\n      (item, i) => i === this.props.currentQuestionIndex\r\n    );\r\n    console.log(\"current question: \");\r\n    console.log(question);\r\n\r\n    // capitalize the category.title property of our found question object. At first, there is no question, so we need a fallback value, i.e. 'waiting...'\r\n    const category = this.props.capitalizeEachWord(\r\n      question?.category?.title || \"waiting...\"\r\n    );\r\n\r\n    // render an empty div if a category hasn't been selected\r\n    if (this.props.currentQuestionIndex === null) return <div></div>;\r\n\r\n    return (\r\n      <div className=\"question__background\">\r\n        <div className=\"question__div\">\r\n          <h4 className=\"question__value\">Question Value: {question?.value}</h4>\r\n          <h2 className=\"category\">\r\n            <em>{category}</em>\r\n          </h2>\r\n          <h1 className=\"question\">{question?.question}</h1>\r\n\r\n          <form onSubmit={this.props.handleSubmit}>\r\n            <input\r\n              onChange={this.props.handleChange}\r\n              value={this.props.answerText}\r\n              className=\"user__answer\"\r\n            ></input>\r\n            <button className=\"answer__button\" type=\"submit\">\r\n              Submit Answer\r\n            </button>\r\n          </form>\r\n\r\n          <h5>\r\n            <em>Answer: {question?.answer}</em>\r\n          </h5>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Question;\r\n","import React from \"react\";\r\n\r\nclass GameStart extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"game__start\">\r\n        <h1 className>Welcome To</h1>\r\n        <h1 className=\"jeopardy__banner\">Jeopardy!</h1>\r\n        <button\r\n          onClick={this.props.updateIsPlaying}\r\n          type=\"button\"\r\n          className=\"play__now-button\"\r\n        >\r\n          Play\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameStart;\r\n","import React, { Component } from \"react\";\r\n\r\nimport UserScore from \"./UserScore\";\r\nimport Categories from \"./Categories\";\r\nimport Question from \"./Question\";\r\nimport GameStart from \"./GameStart\";\r\n\r\n// our stateless display component :)\r\nclass Display extends Component {\r\n  render() {\r\n    // returns the GameStart component when Display is first mounted\r\n    if (this.props.isPlaying === false) {\r\n      return <GameStart updateIsPlaying={this.props.updateIsPlaying} />;\r\n    }\r\n    // returns the main game container once the user clicks 'Play'\r\n    return (\r\n      <div className=\"jeopardy__container\">\r\n        <UserScore\r\n          score={this.props.score}\r\n          resetUserScore={this.props.resetUserScore}\r\n          scoreStyle={this.props.scoreStyle}\r\n          currentQuestionIndex={this.props.currentQuestionIndex}\r\n        />\r\n        <Categories\r\n          data={this.props.data}\r\n          capitalizeEachWord={this.props.capitalizeEachWord}\r\n          updateQuestionIndex={this.props.updateQuestionIndex}\r\n          currentQuestionIndex={this.props.currentQuestionIndex}\r\n          changeScoreColor={this.props.changeScoreColor}\r\n        />\r\n\r\n        <Question\r\n          data={this.props.data}\r\n          currentQuestionIndex={this.props.currentQuestionIndex}\r\n          handleSubmit={this.props.handleSubmit}\r\n          handleChange={this.props.handleChange}\r\n          answerText={this.props.answerText}\r\n          capitalizeEachWord={this.props.capitalizeEachWord}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Display;\r\n","import axios from \"axios\";\r\nclass JeopardyService {\r\n  // grab 3 random questions from API\r\n  constructor(\r\n    url = \"https://jservice.kenzie.academy/api/clues\",\r\n    client = axios.create()\r\n  ) {\r\n    this.url = url;\r\n    this.client = client;\r\n  }\r\n  getQuestions() {\r\n    return this.client.get(this.url);\r\n  }\r\n}\r\nexport default JeopardyService;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Display from \"./Display\";\r\n//import our service\r\nimport JeopardyService from \"../../services/jeopardyServices\";\r\n\r\nclass Jeopardy extends Component {\r\n  //set our initial state and set up our service as this.client on this component\r\n  constructor(props) {\r\n    super(props);\r\n    this.client = new JeopardyService();\r\n    this.state = {\r\n      // data is an array here as we will fetch 3 questions\r\n      data: [],\r\n      score: 0,\r\n      answerText: \"\",\r\n      // this will be assigned once a user clicks a category button\r\n      currentQuestionIndex: null,\r\n      // this style object will be assigned to the UserScore component\r\n      scoreStyle: {},\r\n      isPlaying: false,\r\n    };\r\n\r\n    // bind our methods to this object\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.capitalizeEachWord = this.capitalizeEachWord.bind(this);\r\n    this.updateQuestionIndex = this.updateQuestionIndex.bind(this);\r\n    this.resetUserScore = this.resetUserScore.bind(this);\r\n    this.updateIsPlaying = this.updateIsPlaying.bind(this);\r\n  }\r\n\r\n  // updates the state once a category button is selected\r\n  updateQuestionIndex(index) {\r\n    this.setState({ currentQuestionIndex: index });\r\n    console.log(\"index state updated!\");\r\n  }\r\n\r\n  // upaates isPlaying state object; get triggered when GameStart button element is clicked\r\n  updateIsPlaying(e) {\r\n    this.setState({ isPlaying: true });\r\n    console.log(e.target);\r\n  }\r\n\r\n  // resets score state object to 0; will be called upon in UserScore component\r\n  resetUserScore() {\r\n    this.setState({\r\n      score: 0,\r\n      scoreStyle: { animation: \"reset\", animationDuration: \"3s\" },\r\n    });\r\n    console.log(\"user score reset to 0!\");\r\n  }\r\n\r\n  // gets 3 random questions from the API and add it to the data array in state\r\n  getNewQuestions() {\r\n    // fetch()\r\n    this.client.getQuestions().then((result) => {\r\n      console.log(\"current question set: \");\r\n      console.log(result.data);\r\n      this.setState({\r\n        data: result.data.clues.slice(0, 6),\r\n        currentQuestionIndex: null,\r\n      });\r\n    });\r\n  }\r\n\r\n  //when the component mounts, get a the first 3 questions\r\n  componentDidMount() {\r\n    this.getNewQuestions();\r\n  }\r\n\r\n  // compares the state value of answerText to the question object's answer value\r\n  checkAnswer(string, answer) {\r\n    return string.toLowerCase().trim() === answer.toLowerCase();\r\n  }\r\n\r\n  // checkAnswer runs here, score values are settled, and state is reset to default values\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (this.state.currentQuestionIndex === null) return;\r\n    let newScore = 0;\r\n    // we will assign an animation to the scoreStyle object depending on if the user answers correctly or incorrectly\r\n    let animation = \"\";\r\n    if (\r\n      this.checkAnswer(\r\n        this.state.answerText,\r\n        this.state.data[this.state.currentQuestionIndex].answer\r\n      )\r\n    ) {\r\n      newScore =\r\n        this.state.score +\r\n        this.state.data[this.state.currentQuestionIndex].value;\r\n      animation = \"correct\";\r\n      console.log(\"correct answer!\");\r\n    } else {\r\n      newScore =\r\n        this.state.score -\r\n        this.state.data[this.state.currentQuestionIndex].value;\r\n      animation = \"incorrect\";\r\n      console.log(\"incorrect answer!\");\r\n    }\r\n\r\n    this.setState({\r\n      score: newScore,\r\n      answerText: \"\",\r\n      currentQuestionIndex: null,\r\n      scoreStyle: { animation: animation, animationDuration: \"3s\" },\r\n    });\r\n\r\n    this.getNewQuestions();\r\n    console.log(\"retrieving new questions\");\r\n    // reset the animation properties on the scoreStyle object\r\n    setTimeout(() => {\r\n      this.setState({ scoreStyle: { animation: \"\", animationDuration: \"\" } });\r\n    }, 1000);\r\n  }\r\n\r\n  // reassigns the state value of answerText whenever a user types in the input field\r\n  handleChange(e) {\r\n    this.setState({ answerText: e.target.value });\r\n  }\r\n\r\n  // formats a string so that the first letter of each word is capitalized -- will use this for categories\r\n  capitalizeEachWord(str) {\r\n    const array = str.split(\" \");\r\n    return array\r\n      .map((word) => {\r\n        return word.charAt(0).toUpperCase() + word.slice(1);\r\n      })\r\n      .join(\" \");\r\n  }\r\n\r\n  //display the results on the screen\r\n  render() {\r\n    return (\r\n      <Display\r\n        score={this.state.score}\r\n        isPlaying={this.state.isPlaying}\r\n        updateIsPlaying={this.updateIsPlaying}\r\n        resetUserScore={this.resetUserScore}\r\n        value={this.state.data.value}\r\n        handleSubmit={this.handleSubmit}\r\n        handleChange={this.handleChange}\r\n        answerText={this.state.answerText}\r\n        answer={this.state.data.answer}\r\n        data={this.state.data}\r\n        capitalizeEachWord={this.capitalizeEachWord}\r\n        currentQuestionIndex={this.state.currentQuestionIndex}\r\n        updateQuestionIndex={this.updateQuestionIndex}\r\n        scoreStyle={this.state.scoreStyle}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Jeopardy;\r\n","const NoMatch = () => {\r\n  return <h2>404 - Page Not Found! Try a different URL</h2>;\r\n};\r\n\r\nexport default NoMatch;\r\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport Welcome from \"./components/welcome/Welcome\";\nimport Clock from \"./components/clock/Clock\";\nimport Contact from \"./components/contact/Contact\";\nimport Navigation from \"./components/navigation/Navigation\";\nimport Jeopardy from \"./components/jeopardy/Jeopardy\";\nimport NoMatch from \"./NoMatch\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <Navigation />\n        <div className=\"App\">\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={(props) => <Welcome {...props} name=\"Michael\" />}\n            />\n            <Route path=\"/welcome/:name\" component={Welcome} />\n            <Route path=\"/clock\" component={Clock} />\n            <Route path=\"/contact\" component={Contact} />\n            <Route path=\"/jeopardy\" component={Jeopardy} />\n            <Route component={NoMatch} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport \"./App.css\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}